global
	log /dev/log    local0
	log /dev/log    local1 notice
	chroot /var/lib/haproxy
	stats socket ipv4@127.0.0.1:9999 level admin
	stats socket /var/run/haproxy.sock mode 666 level admin
	stats timeout 2m
	user haproxy
	group haproxy
	daemon

	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
	ssl-default-bind-options no-sslv3

defaults
	log     global
	mode    http
	option  httplog
	option  dontlognull
	timeout connect 5000
	timeout client  50000
	timeout server  50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

frontend apache_front

	bind *:80

	acl is_filtro path_beg /filtros/
	acl filtro00 urlp_val(id) 1:100
	acl filtro01 urlp_val(id) 101:200

	acl is_auto path_beg /auto/
	acl auto10 urlp_val(id) 1:100
	acl auto11 urlp_val(id) 101:200

	acl is_busqueda path_beg /busqueda/
	acl busqueda00 urlp_val(id) 1:100
	acl busqueda01 urlp_val(id) 101:200

	use_backend backfiltro0 if is_filtro filtro00
	use_backend backfiltro1 if is_filtro filtro01
	use_backend backauto0 if is_auto auto10
	use_backend backauto1 if is_auto auto11
	use_backend backbusqueda0 if is_busqueda busqueda00
	use_backend backbusqueda1 if is_busqueda busqueda01

backend backfiltro0
	balance roundrobin
	server-template mywebapp 10 _cnfiltro00._tcp.service.consul resolvers consul resolve-opts allow-dup-ip resolve-prefer ipv4 check
	timeout connect 1m
	timeout server 1m

backend backfiltro1
	balance roundrobin
	server-template mywebapp 10 _cnfiltro01._tcp.service.consul resolvers consul resolve-opts allow-dup-ip resolve-prefer ipv4 check
	timeout connect 1m
	timeout server 1m

backend backauto0
	balance roundrobin
	server-template mywebapp 10 _cnauto10._tcp.service.consul resolvers consul resolve-opts allow-dup-ip resolve-prefer ipv4 check
	timeout connect 1m
	timeout server 1m

backend backauto1
	balance roundrobin
	server-template mywebapp 10 _cnauto11._tcp.service.consul resolvers consul resolve-opts allow-dup-ip resolve-prefer ipv4 check
	timeout connect 1m
	timeout server 1m

backend backbusqueda0
	balance roundrobin
	server-template mywebapp 10 _cnbusqueda00._tcp.service.consul resolvers consul resolve-opts allow-dup-ip resolve-prefer ipv4 check
	timeout connect 1m
	timeout server 1m

backend backbusqueda1
	balance roundrobin
	server-template mywebapp 10 _cnbusqueda01._tcp.service.consul resolvers consul resolve-opts allow-dup-ip resolve-prefer ipv4 check
	timeout connect 1m
	timeout server 1m

resolvers consul
	nameserver consul 127.0.0.1:8600
	accepted_payload_size 8192
	hold valid 5s

